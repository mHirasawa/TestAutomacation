formatVersion: 0.9.2
subMethodTable:
  methods:
  - {name: assert, testDoc: '{0}をチェック', capture: none, classKey: javaSystem, key: javaSystem.assert}
  - {name: equals, testDoc: '「{0}」が「{1}」に等しいか', capture: none, classKey: javaSystem,
    key: javaSystem.equals}
  - {name: notEquals, testDoc: '「{0}」が「{1}」と異なるか', capture: none, classKey: javaSystem,
    key: javaSystem.notEquals}
  - {name: assertEquals, testDoc: '', classKey: junit.framework.Assert, key: 'junit.framework.Assert.assertEquals-double,double'}
  - {name: assertEquals, testDoc: '', classKey: junit.framework.Assert, key: 'junit.framework.Assert.assertEquals-long,long'}
  - {name: assertEquals, testDoc: '', classKey: junit.framework.Assert, key: 'junit.framework.Assert.assertEquals-Object,Object'}
  - {name: assertEquals, testDoc: '', classKey: junit.framework.Assert, key: 'junit.framework.Assert.assertEquals-Object[],Object[]'}
  - {name: is, testDoc: '「{0}」に等しい', capture: none, classKey: org.hamcrest.core.Is,
    key: org.hamcrest.core.Is.is-Object}
  - {name: is, testDoc: '{0}', capture: none, classKey: org.hamcrest.core.Is, key: org.hamcrest.core.Is.is-org.hamcrest.Matcher}
  - {name: not, testDoc: '「{0}」と異なる', capture: none, classKey: org.hamcrest.core.IsNot,
    key: org.hamcrest.core.IsNot.not-Object}
  - {name: not, testDoc: '「{0}」と異なる', capture: none, classKey: org.hamcrest.core.IsNot,
    key: org.hamcrest.core.IsNot.not-org.hamcrest.Matcher}
  - {name: is, testDoc: '「{0}」に等しい', capture: none, classKey: org.hamcrest.CoreMatchers,
    key: org.hamcrest.CoreMatchers.is-Object}
  - {name: is, testDoc: '{0}', capture: none, classKey: org.hamcrest.CoreMatchers,
    key: org.hamcrest.CoreMatchers.is-org.hamcrest.Matcher}
  - {name: not, testDoc: '「{0}」と異なる', capture: none, classKey: org.hamcrest.CoreMatchers,
    key: org.hamcrest.CoreMatchers.not-Object}
  - {name: not, testDoc: '「{0}」と異なる', capture: none, classKey: org.hamcrest.CoreMatchers,
    key: org.hamcrest.CoreMatchers.not-org.hamcrest.Matcher}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.junit.Assert,
    key: 'org.junit.Assert.assertEquals-double,double'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.junit.Assert,
    key: 'org.junit.Assert.assertEquals-long,long'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.junit.Assert,
    key: 'org.junit.Assert.assertEquals-Object,Object'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.junit.Assert,
    key: 'org.junit.Assert.assertEquals-Object[],Object[]'}
  - {name: assertThat, testDoc: '「{0}」が{1}ことをチェック', classKey: org.junit.Assert, key: 'org.junit.Assert.assertThat-Object,org.hamcrest.Matcher'}
  - {name: assertThat, testDoc: '「{1}」が{2}ことをチェック', classKey: org.junit.Assert, key: 'org.junit.Assert.assertThat-String,Object,org.hamcrest.Matcher'}
  - {name: assertThat, testDoc: '「{0}」が{1}ことをチェック', classKey: org.hamcrest.MatcherAssert,
    key: 'org.hamcrest.MatcherAssert.assertThat-Object,org.hamcrest.Matcher'}
  - {name: assertThat, testDoc: '「{1}」が{2}ことをチェック', classKey: org.hamcrest.MatcherAssert,
    key: 'org.hamcrest.MatcherAssert.assertThat-String,Object,org.hamcrest.Matcher'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-boolean,boolean'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-int,int'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-long,long'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-Object,Object'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-Object[],Object[]'}
  - {name: assertEquals, testDoc: '「{0}」が「{1}」に等しいことをチェック', classKey: org.testng.Assert,
    key: 'org.testng.Assert.assertEquals-String,String'}
  - {name: get, testDoc: '「{this}」の{0}番目', capture: none, classKey: java.util.List,
    key: java.util.List.get}
  - {name: className, testDoc: 'クラス名 = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.className}
  - {name: cssSelector, testDoc: 'css = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.cssSelector}
  - {name: id, testDoc: 'id = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.id}
  - {name: linkText, testDoc: 'テキスト = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.linkText}
  - {name: name, testDoc: 'name = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.name}
  - {name: partialLinkText, testDoc: 'テキスト = {0}(部分一致)', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.partialLinkText}
  - {name: tagName, testDoc: 'タグ名 = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.tagName}
  - {name: xpath, testDoc: 'xpath = {0}', capture: none, classKey: org.openqa.selenium.By,
    key: org.openqa.selenium.By.xpath}
  - {name: findElementByClassName, testDoc: '要素「クラス名 = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName}
  - {name: findElementByCssSelector, testDoc: '要素「css = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector}
  - {name: findElementById, testDoc: '要素「id = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementById}
  - {name: findElementByLinkText, testDoc: '要素「テキスト = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText}
  - {name: findElementByName, testDoc: '要素「name = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByName}
  - {name: findElementByPartialLinkText, testDoc: '要素「テキスト = {0}(部分一致)」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByPartialLinkText}
  - {name: findElementByTagName, testDoc: '要素「タグ名 = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByTagName}
  - {name: findElementByXPath, testDoc: '要素「xpath = {0}」', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath}
  - {name: findElementsByClassName, testDoc: '「クラス名 = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByClassName}
  - {name: findElementsByCssSelector, testDoc: '「css = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByCssSelector}
  - {name: findElementsById, testDoc: '「id = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsById}
  - {name: findElementsByLinkText, testDoc: '「テキスト = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByLinkText}
  - {name: findElementsByName, testDoc: '「name = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByName}
  - {name: findElementsByPartialLinkText, testDoc: '「テキスト = {0}(部分一致)」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByPartialLinkText}
  - {name: findElementsByTagName, testDoc: '「タグ名 = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByTagName}
  - {name: findElementsByXPath, testDoc: '「xpath = {0}」を満たす全要素', classKey: org.openqa.selenium.remote.RemoteWebDriver,
    key: org.openqa.selenium.remote.RemoteWebDriver.findElementsByXPath}
  - {name: getOrientation, testDoc: スクリーンの向き, classKey: org.openqa.selenium.Rotatable,
    key: org.openqa.selenium.Rotatable.getOrientation}
  - {name: rotate, testDoc: 'スクリーンの向きを{0}に回転', classKey: org.openqa.selenium.Rotatable,
    key: org.openqa.selenium.Rotatable.rotate}
  - {name: Select, testDoc: '{0}のプルダウン', classKey: org.openqa.selenium.support.ui.Select,
    key: org.openqa.selenium.support.ui.Select.Select}
  - {name: selectByIndex, testDoc: '{this}の、{0}番目の項目を選択', classKey: org.openqa.selenium.support.ui.Select,
    key: org.openqa.selenium.support.ui.Select.selectByIndex}
  - {name: selectByValue, testDoc: '{this}の、「値 = {0}」の項目を選択', classKey: org.openqa.selenium.support.ui.Select,
    key: org.openqa.selenium.support.ui.Select.selectByValue}
  - {name: selectByVisibleText, testDoc: '{this}の、「テキスト = {0}」の項目を選択', classKey: org.openqa.selenium.support.ui.Select,
    key: org.openqa.selenium.support.ui.Select.selectByVisibleText}
  - {name: close, testDoc: 現在のウィンドウを閉じる, classKey: org.openqa.selenium.WebDriver,
    key: org.openqa.selenium.WebDriver.close}
  - {name: findElement, testDoc: '要素「{0}」', classKey: org.openqa.selenium.WebDriver,
    key: org.openqa.selenium.WebDriver.findElement}
  - {name: findElements, testDoc: '「{0}」を満たす全要素', classKey: org.openqa.selenium.WebDriver,
    key: org.openqa.selenium.WebDriver.findElements}
  - {name: get, testDoc: '「{0}」にページ遷移', classKey: org.openqa.selenium.WebDriver, key: org.openqa.selenium.WebDriver.get}
  - {name: getCurrentUrl, testDoc: 現在のURL, classKey: org.openqa.selenium.WebDriver,
    key: org.openqa.selenium.WebDriver.getCurrentUrl}
  - {name: getTitle, testDoc: ページタイトル, classKey: org.openqa.selenium.WebDriver, key: org.openqa.selenium.WebDriver.getTitle}
  - {name: quit, testDoc: ブラウザを閉じる, classKey: org.openqa.selenium.WebDriver, key: org.openqa.selenium.WebDriver.quit}
  - {name: back, testDoc: 前ページに戻る, classKey: org.openqa.selenium.WebDriver$Navigation,
    key: org.openqa.selenium.WebDriver$Navigation.back}
  - {name: forward, testDoc: 次ページに進む, classKey: org.openqa.selenium.WebDriver$Navigation,
    key: org.openqa.selenium.WebDriver$Navigation.forward}
  - {name: refresh, testDoc: ページ再読み込み, classKey: org.openqa.selenium.WebDriver$Navigation,
    key: org.openqa.selenium.WebDriver$Navigation.refresh}
  - {name: to, testDoc: '「{0}」にページ遷移', classKey: org.openqa.selenium.WebDriver$Navigation,
    key: org.openqa.selenium.WebDriver$Navigation.to}
  - {name: clear, testDoc: '{this}のテキストをクリア', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.clear}
  - {name: click, testDoc: '{this}をクリック', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.click}
  - {name: getAttribute, testDoc: '{this}の属性「{0}」', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.getAttribute}
  - {name: getText, testDoc: '{this}の表示テキスト', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.getText}
  - {name: isDisplayed, testDoc: '{this}が表示されているか', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.isDisplayed}
  - {name: isEnabled, testDoc: '{this}が有効になっているか', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.isEnabled}
  - {name: isSelected, testDoc: '{this}が選択されているか', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.isSelected}
  - {name: sendKeys, testDoc: '{this}に「{0}」を入力', classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.sendKeys}
  - {name: submit, testDoc: フォームのデータを送信, classKey: org.openqa.selenium.WebElement,
    key: org.openqa.selenium.WebElement.submit}
  - {name: findElementByAndroidUIAutomator, testDoc: '要素「Android UiAutomator = {0}」',
    classKey: io.appium.java_client.android.AndroidDriver, key: io.appium.java_client.android.AndroidDriver.findElementByAndroidUIAutomator}
  - {name: findElementsByAndroidUIAutomator, testDoc: '「Android UiAutomator = {0}」を満たす全要素',
    classKey: io.appium.java_client.android.AndroidDriver, key: io.appium.java_client.android.AndroidDriver.findElementsByAndroidUIAutomator}
  - {name: isLocked, testDoc: 画面がロックされているか, classKey: io.appium.java_client.android.AndroidDriver,
    key: io.appium.java_client.android.AndroidDriver.isLocked}
  - {name: findElementByAccessibilityId, testDoc: '要素「アクセシビリティID = {0}」', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.findElementByAccessibilityId}
  - {name: findElementsByAccessibilityId, testDoc: '「アクセシビリティID = {0}」を満たす全要素', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.findElementsByAccessibilityId}
  - {name: hideKeyboard, testDoc: キーボードを隠す, classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.hideKeyboard}
  - {name: lockScreen, testDoc: '{0}秒間画面をロック', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.lockScreen}
  - {name: pinch, testDoc: '(x:{0}, y:{1})をピンチインで縮小', classKey: io.appium.java_client.AppiumDriver,
    key: 'io.appium.java_client.AppiumDriver.pinch-int,int'}
  - {name: pinch, testDoc: '{0}をピンチインで縮小', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.pinch-org.openqa.selenium.WebElement}
  - {name: swipe, testDoc: '(x:{0}, y:{1})から(x:{2}, y:{3})へ、{4}ミリ秒間でスワイプ', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.swipe}
  - {name: tap, testDoc: '(x:{1}, y:{2})を、{0}本指で{3}ミリ秒間タップ', classKey: io.appium.java_client.AppiumDriver,
    key: 'io.appium.java_client.AppiumDriver.tap-int,int,int,int'}
  - {name: tap, testDoc: '{1}を{0}本指で{2}ミリ秒間タップ', classKey: io.appium.java_client.AppiumDriver,
    key: 'io.appium.java_client.AppiumDriver.tap-int,org.openqa.selenium.WebElement,int'}
  - {name: zoom, testDoc: '(x:{0}, y:{1})をピンチアウトで拡大', classKey: io.appium.java_client.AppiumDriver,
    key: 'io.appium.java_client.AppiumDriver.zoom-int,int'}
  - {name: zoom, testDoc: '{0}をピンチアウトで拡大', classKey: io.appium.java_client.AppiumDriver,
    key: io.appium.java_client.AppiumDriver.zoom-org.openqa.selenium.WebElement}
  - {name: findElementByIosUIAutomation, testDoc: '要素「iOS UIAutomation = {0}」', classKey: io.appium.java_client.ios.IOSDriver,
    key: io.appium.java_client.ios.IOSDriver.findElementByIosUIAutomation}
  - {name: findElementsByIosUIAutomation, testDoc: '「iOS UIAutomation = {0}」を満たす全要素',
    classKey: io.appium.java_client.ios.IOSDriver, key: io.appium.java_client.ios.IOSDriver.findElementsByIosUIAutomation}
  - {name: shake, testDoc: 端末をシェイク, classKey: io.appium.java_client.ios.IOSDriver,
    key: io.appium.java_client.ios.IOSDriver.shake}
  - {name: AccessibilityId, testDoc: 'アクセシビリティID = {0}', capture: none, classKey: io.appium.java_client.MobileBy,
    key: io.appium.java_client.MobileBy.AccessibilityId}
  - {name: AndroidUIAutomator, testDoc: 'Android UiAutomator = {0}', capture: none,
    classKey: io.appium.java_client.MobileBy, key: io.appium.java_client.MobileBy.AndroidUIAutomator}
  - {name: IosUIAutomation, testDoc: 'iOS UIAutomation = {0}', capture: none, classKey: io.appium.java_client.MobileBy,
    key: io.appium.java_client.MobileBy.IosUIAutomation}
  - {name: with, testDoc: '{this}に「{0}」を入力', classKey: org.fluentlenium.core.action.FillConstructor,
    key: org.fluentlenium.core.action.FillConstructor.with}
  - {name: clear, testDoc: '{this}のテキストをクリア', classKey: org.fluentlenium.core.domain.FluentList,
    key: org.fluentlenium.core.domain.FluentList.clear}
  - {name: click, testDoc: '{this}をクリック', classKey: org.fluentlenium.core.domain.FluentList,
    key: org.fluentlenium.core.domain.FluentList.click}
  - {name: getAttribute, testDoc: '{this}の属性「{0}」', classKey: org.fluentlenium.core.domain.FluentList,
    key: org.fluentlenium.core.domain.FluentList.getAttribute}
  - {name: getText, testDoc: '{this}の表示テキスト', classKey: org.fluentlenium.core.domain.FluentList,
    key: org.fluentlenium.core.domain.FluentList.getText}
  - {name: getValue, testDoc: '{this}の値', classKey: org.fluentlenium.core.domain.FluentList,
    key: org.fluentlenium.core.domain.FluentList.getValue}
  - {name: clear, testDoc: '{this}のテキストをクリア', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.clear}
  - {name: click, testDoc: '{this}をクリック', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.click}
  - {name: getAttribute, testDoc: '{this}の属性「{0}」', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.getAttribute}
  - {name: getText, testDoc: '{this}の表示テキスト', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.getText}
  - {name: getValue, testDoc: '{this}の値', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.getValue}
  - {name: isDisplayed, testDoc: '{this}が表示されているか', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.isDisplayed}
  - {name: isEnabled, testDoc: '{this}が有効になっているか', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.isEnabled}
  - {name: isSelected, testDoc: '{this}が選択されているか', classKey: org.fluentlenium.core.domain.FluentWebElement,
    key: org.fluentlenium.core.domain.FluentWebElement.isSelected}
  - {name: withClass, testDoc: 'class = {0}', capture: none, classKey: org.fluentlenium.core.filter.FilterConstructor,
    key: org.fluentlenium.core.filter.FilterConstructor.withClass-String}
  - {name: withName, testDoc: 'name = {0}', capture: none, classKey: org.fluentlenium.core.filter.FilterConstructor,
    key: org.fluentlenium.core.filter.FilterConstructor.withName-String}
  - {name: withText, testDoc: 'text = {0}', capture: none, classKey: org.fluentlenium.core.filter.FilterConstructor,
    key: org.fluentlenium.core.filter.FilterConstructor.withText-String}
  - {name: $, testDoc: '要素「{0}{if:1} ({1}){end}」', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: 'org.fluentlenium.core.Fluent.$-String,org.fluentlenium.core.filter.Filter[]'}
  - {name: $, testDoc: '「{0}{if:2} ({2}){end}」の{1}番目の要素', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 2, key: 'org.fluentlenium.core.Fluent.$-String,java.lang.Integer,org.fluentlenium.core.filter.Filter[]'}
  - {name: clear, testDoc: '要素「{0}{if:1} ({1}){end}」のテキストをクリア', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: org.fluentlenium.core.Fluent.clear}
  - {name: click, testDoc: '要素「{0}{if:1} ({1}){end}」をクリック', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: org.fluentlenium.core.Fluent.click}
  - {name: executeScript, testDoc: 'JavaScript「{0}」を実行', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: org.fluentlenium.core.Fluent.executeScript}
  - {name: fill, testDoc: '要素「{0}{if:1} ({1}){end}」', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: org.fluentlenium.core.Fluent.fill}
  - {name: find, testDoc: '要素「{0}{if:1} ({1}){end}」', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: 'org.fluentlenium.core.Fluent.find-String,org.fluentlenium.core.filter.Filter[]'}
  - {name: find, testDoc: '「{0}{if:2} ({2}){end}」の{1}番目の要素', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 2, key: 'org.fluentlenium.core.Fluent.find-String,java.lang.Integer,org.fluentlenium.core.filter.Filter[]'}
  - {name: findFirst, testDoc: '「{0}{if:1} ({1}){end}」の最初の要素', classKey: org.fluentlenium.core.Fluent,
    varLengthArgIndex: 1, key: 'org.fluentlenium.core.Fluent.findFirst-String,org.fluentlenium.core.filter.Filter[]'}
  - {name: goTo, testDoc: '「{0}」にページ遷移', classKey: org.fluentlenium.core.Fluent, key: org.fluentlenium.core.Fluent.goTo-String}
  - {name: goTo, testDoc: '「{0}」にページ遷移', classKey: org.fluentlenium.core.Fluent, key: org.fluentlenium.core.Fluent.goTo-org.fluentlenium.core.FluentPage}
  - {name: takeScreenShot, testDoc: '画面キャプチャを「{0}」に保存', classKey: org.fluentlenium.core.Fluent,
    key: org.fluentlenium.core.Fluent.takeScreenShot-String}
  - {name: title, testDoc: '{this}のページタイトル', classKey: org.fluentlenium.core.Fluent,
    key: org.fluentlenium.core.Fluent.title}
  - {name: go, testDoc: '{this}にページ遷移', classKey: org.fluentlenium.core.FluentPage,
    key: org.fluentlenium.core.FluentPage.go}
  - {name: isAt, testDoc: '{this}へのページ遷移が成功したことをチェック', classKey: org.fluentlenium.core.FluentPage,
    key: org.fluentlenium.core.FluentPage.isAt}
subClassTable:
  classes:
  - {key: javaSystem, qname: javaSystem}
  - {key: junit.framework.Assert, qname: junit.framework.Assert}
  - {key: org.hamcrest.core.Is, qname: org.hamcrest.core.Is}
  - {key: org.hamcrest.core.IsNot, qname: org.hamcrest.core.IsNot}
  - {key: org.hamcrest.CoreMatchers, qname: org.hamcrest.CoreMatchers}
  - {key: org.junit.Assert, qname: org.junit.Assert}
  - {key: org.hamcrest.MatcherAssert, qname: org.hamcrest.MatcherAssert}
  - {key: org.testng.Assert, qname: org.testng.Assert}
  - {key: java.util.List, qname: java.util.List}
  - {key: org.openqa.selenium.By, qname: org.openqa.selenium.By}
  - {key: org.openqa.selenium.remote.RemoteWebDriver, qname: org.openqa.selenium.remote.RemoteWebDriver}
  - {key: org.openqa.selenium.Rotatable, qname: org.openqa.selenium.Rotatable}
  - {key: org.openqa.selenium.support.ui.Select, qname: org.openqa.selenium.support.ui.Select}
  - {key: org.openqa.selenium.WebDriver, qname: org.openqa.selenium.WebDriver}
  - {key: org.openqa.selenium.WebDriver$Navigation, qname: org.openqa.selenium.WebDriver$Navigation}
  - {key: org.openqa.selenium.WebElement, qname: org.openqa.selenium.WebElement}
  - {key: io.appium.java_client.android.AndroidDriver, qname: io.appium.java_client.android.AndroidDriver}
  - {key: io.appium.java_client.AppiumDriver, qname: io.appium.java_client.AppiumDriver}
  - {key: io.appium.java_client.ios.IOSDriver, qname: io.appium.java_client.ios.IOSDriver}
  - {key: io.appium.java_client.MobileBy, qname: io.appium.java_client.MobileBy}
  - {key: org.fluentlenium.core.action.FillConstructor, qname: org.fluentlenium.core.action.FillConstructor}
  - {key: org.fluentlenium.core.domain.FluentList, qname: org.fluentlenium.core.domain.FluentList}
  - {key: org.fluentlenium.core.domain.FluentWebElement, qname: org.fluentlenium.core.domain.FluentWebElement}
  - {key: org.fluentlenium.core.filter.FilterConstructor, qname: org.fluentlenium.core.filter.FilterConstructor}
  - {key: org.fluentlenium.core.Fluent, qname: org.fluentlenium.core.Fluent}
  - {key: org.fluentlenium.core.FluentPage, qname: org.fluentlenium.core.FluentPage}
